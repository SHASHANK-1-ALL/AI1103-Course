# -*- coding: utf-8 -*-
"""Assignment1.py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1uE9n8Cod2QKy98vLmVRRpHp18iW6jixr
"""

import numpy as np
import matplotlib.pyplot as plt
from scipy.stats import bernoulli

def bayes_theorem(p_e1,p_e2,p_xgiven_e1,p_xgiven_e2):
	p_x= p_e1*p_xgiven_e1 + p_e2*p_xgiven_e2
	numerator1 = p_e1*p_xgiven_e1
	p_e1given_x=numerator1/p_x
	return p_e1given_x

def bernoulli_success_prob(success):
	simlen=int(1e5)
	data_bern = bernoulli.rvs(size=simlen,p=success)
	#print(data_bern)
	#Calculating the number of favourable outcomes
	err_ind = np.nonzero(data_bern == 1)
	#calculating the probability
	err_n = np.size(err_ind)/simlen
	return err_n

#Here we calculate probability using bernoulli simulation

#Probability of occurence of event E
p_E= bernoulli_success_prob(0.6666666667)
#Probability of occurence of event F
p_F= bernoulli_success_prob(0.3333333333)
#Probability of getting exactly one head when event E has already occured
p_onehead_E= bernoulli_success_prob(0.5)
#Probability of getting exactly one head when event F has already occured
p_onehead_F= bernoulli_success_prob(0.375)

#Probability of occurence of event E when we get exactly one head
prob= bayes_theorem(p_E,p_F,p_onehead_E, p_onehead_F)

print("Probability of occurence of event E when we get exactly one head =", prob,"(Calculated value)")
print("which is very very close to 0.7272727273 (Theoritical value)")